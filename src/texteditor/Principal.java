package texteditor;

import java.awt.Color;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javax.swing.JFileChooser;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
/**
 *
 * @author Gabriela Mejía - David Zelaya - Miguel Medrano
 */
public class Principal extends javax.swing.JFrame {
    StyledDocument documento;
    Style estilo;
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        documento = texto.getStyledDocument();
        estilo = texto.addStyle("miEstilo", null);

        DefaultComboBoxModel modelo = (DefaultComboBoxModel) combobox_fuentes.getModel();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String fontNames[] = ge.getAvailableFontFamilyNames();
        for (int i = 0; i < fontNames.length; i++) {
            modelo.addElement(fontNames[i]);
        }
        combobox_fuentes.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextPane();
        jToolBar1 = new javax.swing.JToolBar();
        combobox_fuentes = new javax.swing.JComboBox<>();
        combobox_tamaño = new javax.swing.JComboBox<>();
        cambiarColor = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnAbrir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editor Texto");

        texto.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(texto);

        jToolBar1.setRollover(true);

        combobox_fuentes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobox_fuentesItemStateChanged(evt);
            }
        });
        jToolBar1.add(combobox_fuentes);

        combobox_tamaño.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "18", "24", "36", "48", "60", "72" }));
        combobox_tamaño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_tamañoActionPerformed(evt);
            }
        });
        jToolBar1.add(combobox_tamaño);

        cambiarColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditor/letra.png"))); // NOI18N
        cambiarColor.setFocusable(false);
        cambiarColor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cambiarColor.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cambiarColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cambiarColorMouseClicked(evt);
            }
        });
        jToolBar1.add(cambiarColor);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(btnAbrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cambiarColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarColorMouseClicked
        // TODO add your handling code here:
        try {
            StyleConstants.setForeground(estilo,JColorChooser.showDialog(this,"Seleccione Color", Color.red)
            );
            documento.setCharacterAttributes(texto.getSelectionStart(),
                    texto.getSelectionEnd() - texto.getSelectionStart(),
                    texto.getStyle("miEstilo"),
                    true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_cambiarColorMouseClicked

    private void combobox_tamañoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_tamañoActionPerformed
        // TODO add your handling code here:
        StyleConstants.setFontSize(estilo, Integer.parseInt(combobox_tamaño.getSelectedItem().toString()));
        documento.setCharacterAttributes(texto.getSelectionStart(),
                texto.getSelectionEnd() - texto.getSelectionStart(),
                texto.getStyle("miEstilo"),
                true);
    }//GEN-LAST:event_combobox_tamañoActionPerformed

    private void combobox_fuentesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobox_fuentesItemStateChanged
        // TODO add your handling code here:
        StyleConstants.setFontFamily(estilo, combobox_fuentes.getSelectedItem().toString());
        documento.setCharacterAttributes(texto.getSelectionStart(),
                texto.getSelectionEnd() - texto.getSelectionStart(),
                texto.getStyle("miEstilo"),
                true);
    }//GEN-LAST:event_combobox_fuentesItemStateChanged
    
    public void Escribir(String mensaje) {
        File nose = new File("src/hi/hola.txt");

        try {
            FileWriter fr = new FileWriter(nose);
            fr.write(mensaje);
            fr.flush();
        } catch (IOException e) {
            System.out.println("Error");
        }
    }
    public void guardarArchivoConFormato(String mensaje) {
        EstiloTexto estiloTexto = new EstiloTexto(
            mensaje,
            StyleConstants.getFontFamily(estilo),
            StyleConstants.getFontSize(estilo),
            StyleConstants.getForeground(estilo)
        );

        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("src/hi/hola.txt"));
            oos.writeObject(estiloTexto);
            oos.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Método para cargar el archivo con formato
    public void cargarArchivoConFormato(String nose) {
        if(nose!=null){
        try {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream(nose));
            EstiloTexto estiloTexto = (EstiloTexto) ois.readObject();
            ois.close();

            // Aplica el formato cargado al JTextPane
            texto.setText(estiloTexto.getTexto());
            StyleConstants.setFontFamily(estilo, estiloTexto.getFuente());
            StyleConstants.setFontSize(estilo, estiloTexto.getTamaño());
            StyleConstants.setForeground(estilo, estiloTexto.getColor());
            documento.setCharacterAttributes(0, texto.getText().length(), texto.getStyle("miEstilo"), true);
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
        }
    }
    
    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        //Escribir(texto.getText() + " " + texto.getStyle("miEstilo").toString());
        guardarArchivoConFormato(texto.getText());
    }//GEN-LAST:event_btnGuardarActionPerformed

    private String abrirArchivo() {
        JFileChooser fileChooser = new JFileChooser();
        String hola;
        
        // Configura el JFileChooser para que solo permita seleccionar archivos de texto (*.txt)
        fileChooser.setFileFilter(new javax.swing.filechooser.FileFilter() {
            @Override
            public boolean accept(File file) {
                return file.getName().toLowerCase().endsWith(".txt") || file.isDirectory();
            }

            @Override
            public String getDescription() {
                return "Archivos de texto (*.txt)";
            }
        });

        int seleccion = fileChooser.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();

            try {
                BufferedReader br = new BufferedReader(new FileReader(archivoSeleccionado));
                StringBuilder contenido = new StringBuilder();
                String linea;

                while ((linea = br.readLine()) != null) {
                    contenido.append(linea).append("\n");
                }

                // Establece el contenido del JTextPane con el contenido del archivo
                //texto.setText(contenido.toString());
                return archivoSeleccionado.getAbsolutePath();

            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return null;
    }
    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        // TODO add your handling code here:
        cargarArchivoConFormato(abrirArchivo());
    }//GEN-LAST:event_btnAbrirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton cambiarColor;
    private javax.swing.JComboBox<String> combobox_fuentes;
    private javax.swing.JComboBox<String> combobox_tamaño;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextPane texto;
    // End of variables declaration//GEN-END:variables
}